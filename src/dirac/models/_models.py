# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.5, generator: @autorest/python@6.4.11)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import TYPE_CHECKING, Any, List, Optional, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class BodyAuthToken(_serialization.Model):
    """Body_auth_token.

    All required parameters must be populated in order to send to Azure.

    :ivar grant_type: OAuth2 Grant type. Required.
    :vartype grant_type: ~dirac.models.BodyAuthTokenGrantType
    :ivar client_id: OAuth2 client id. Required.
    :vartype client_id: str
    :ivar device_code: device code for OAuth2 device flow.
    :vartype device_code: str
    :ivar code: Code for OAuth2 authorization code flow.
    :vartype code: str
    :ivar redirect_uri: redirect_uri used with OAuth2 authorization code flow.
    :vartype redirect_uri: str
    :ivar code_verifier: Verifier for the code challenge for the OAuth2 authorization flow with
     PKCE.
    :vartype code_verifier: str
    """

    _validation = {
        "grant_type": {"required": True},
        "client_id": {"required": True},
    }

    _attribute_map = {
        "grant_type": {"key": "grant_type", "type": "BodyAuthTokenGrantType"},
        "client_id": {"key": "client_id", "type": "str"},
        "device_code": {"key": "device_code", "type": "str"},
        "code": {"key": "code", "type": "str"},
        "redirect_uri": {"key": "redirect_uri", "type": "str"},
        "code_verifier": {"key": "code_verifier", "type": "str"},
    }

    def __init__(
        self,
        *,
        grant_type: "_models.BodyAuthTokenGrantType",
        client_id: str,
        device_code: Optional[str] = None,
        code: Optional[str] = None,
        redirect_uri: Optional[str] = None,
        code_verifier: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword grant_type: OAuth2 Grant type. Required.
        :paramtype grant_type: ~dirac.models.BodyAuthTokenGrantType
        :keyword client_id: OAuth2 client id. Required.
        :paramtype client_id: str
        :keyword device_code: device code for OAuth2 device flow.
        :paramtype device_code: str
        :keyword code: Code for OAuth2 authorization code flow.
        :paramtype code: str
        :keyword redirect_uri: redirect_uri used with OAuth2 authorization code flow.
        :paramtype redirect_uri: str
        :keyword code_verifier: Verifier for the code challenge for the OAuth2 authorization flow with
         PKCE.
        :paramtype code_verifier: str
        """
        super().__init__(**kwargs)
        self.grant_type = grant_type
        self.client_id = client_id
        self.device_code = device_code
        self.code = code
        self.redirect_uri = redirect_uri
        self.code_verifier = code_verifier


class BodyAuthTokenGrantType(_serialization.Model):
    """OAuth2 Grant type."""

    _attribute_map = {}

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)


class HTTPValidationError(_serialization.Model):
    """HTTPValidationError.

    :ivar detail: Detail.
    :vartype detail: list[~dirac.models.ValidationError]
    """

    _attribute_map = {
        "detail": {"key": "detail", "type": "[ValidationError]"},
    }

    def __init__(
        self, *, detail: Optional[List["_models.ValidationError"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword detail: Detail.
        :paramtype detail: list[~dirac.models.ValidationError]
        """
        super().__init__(**kwargs)
        self.detail = detail


class JobDefinition(_serialization.Model):
    """JobDefinition.

    All required parameters must be populated in order to send to Azure.

    :ivar owner: Owner. Required.
    :vartype owner: str
    :ivar group: Group. Required.
    :vartype group: str
    :ivar vo: Vo. Required.
    :vartype vo: str
    :ivar jdl: Jdl. Required.
    :vartype jdl: str
    """

    _validation = {
        "owner": {"required": True},
        "group": {"required": True},
        "vo": {"required": True},
        "jdl": {"required": True},
    }

    _attribute_map = {
        "owner": {"key": "owner", "type": "str"},
        "group": {"key": "group", "type": "str"},
        "vo": {"key": "vo", "type": "str"},
        "jdl": {"key": "jdl", "type": "str"},
    }

    def __init__(
        self, *, owner: str, group: str, vo: str, jdl: str, **kwargs: Any
    ) -> None:
        """
        :keyword owner: Owner. Required.
        :paramtype owner: str
        :keyword group: Group. Required.
        :paramtype group: str
        :keyword vo: Vo. Required.
        :paramtype vo: str
        :keyword jdl: Jdl. Required.
        :paramtype jdl: str
        """
        super().__init__(**kwargs)
        self.owner = owner
        self.group = group
        self.vo = vo
        self.jdl = jdl


class JobStatusReturn(_serialization.Model):
    """JobStatusReturn.

    All required parameters must be populated in order to send to Azure.

    :ivar job_id: Job Id. Required.
    :vartype job_id: int
    :ivar status: An enumeration. Required. Known values are: "Running", "Stalled", and "Killed".
    :vartype status: str or ~dirac.models.JobStatus
    """

    _validation = {
        "job_id": {"required": True},
        "status": {"required": True},
    }

    _attribute_map = {
        "job_id": {"key": "job_id", "type": "int"},
        "status": {"key": "status", "type": "str"},
    }

    def __init__(
        self, *, job_id: int, status: Union[str, "_models.JobStatus"], **kwargs: Any
    ) -> None:
        """
        :keyword job_id: Job Id. Required.
        :paramtype job_id: int
        :keyword status: An enumeration. Required. Known values are: "Running", "Stalled", and
         "Killed".
        :paramtype status: str or ~dirac.models.JobStatus
        """
        super().__init__(**kwargs)
        self.job_id = job_id
        self.status = status


class JobStatusUpdate(_serialization.Model):
    """JobStatusUpdate.

    All required parameters must be populated in order to send to Azure.

    :ivar job_id: Job Id. Required.
    :vartype job_id: int
    :ivar status: An enumeration. Required. Known values are: "Running", "Stalled", and "Killed".
    :vartype status: str or ~dirac.models.JobStatus
    """

    _validation = {
        "job_id": {"required": True},
        "status": {"required": True},
    }

    _attribute_map = {
        "job_id": {"key": "job_id", "type": "int"},
        "status": {"key": "status", "type": "str"},
    }

    def __init__(
        self, *, job_id: int, status: Union[str, "_models.JobStatus"], **kwargs: Any
    ) -> None:
        """
        :keyword job_id: Job Id. Required.
        :paramtype job_id: int
        :keyword status: An enumeration. Required. Known values are: "Running", "Stalled", and
         "Killed".
        :paramtype status: str or ~dirac.models.JobStatus
        """
        super().__init__(**kwargs)
        self.job_id = job_id
        self.status = status


class TokenResponse(_serialization.Model):
    """TokenResponse.

    All required parameters must be populated in order to send to Azure.

    :ivar access_token: Access Token. Required.
    :vartype access_token: str
    :ivar expires_in: Expires In. Required.
    :vartype expires_in: int
    :ivar state: State. Required.
    :vartype state: str
    """

    _validation = {
        "access_token": {"required": True},
        "expires_in": {"required": True},
        "state": {"required": True},
    }

    _attribute_map = {
        "access_token": {"key": "access_token", "type": "str"},
        "expires_in": {"key": "expires_in", "type": "int"},
        "state": {"key": "state", "type": "str"},
    }

    def __init__(
        self, *, access_token: str, expires_in: int, state: str, **kwargs: Any
    ) -> None:
        """
        :keyword access_token: Access Token. Required.
        :paramtype access_token: str
        :keyword expires_in: Expires In. Required.
        :paramtype expires_in: int
        :keyword state: State. Required.
        :paramtype state: str
        """
        super().__init__(**kwargs)
        self.access_token = access_token
        self.expires_in = expires_in
        self.state = state


class ValidationError(_serialization.Model):
    """ValidationError.

    All required parameters must be populated in order to send to Azure.

    :ivar loc: Location. Required.
    :vartype loc: list[~dirac.models.ValidationErrorLocItem]
    :ivar msg: Message. Required.
    :vartype msg: str
    :ivar type: Error Type. Required.
    :vartype type: str
    """

    _validation = {
        "loc": {"required": True},
        "msg": {"required": True},
        "type": {"required": True},
    }

    _attribute_map = {
        "loc": {"key": "loc", "type": "[ValidationErrorLocItem]"},
        "msg": {"key": "msg", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(
        self,
        *,
        loc: List["_models.ValidationErrorLocItem"],
        msg: str,
        type: str,
        **kwargs: Any
    ) -> None:
        """
        :keyword loc: Location. Required.
        :paramtype loc: list[~dirac.models.ValidationErrorLocItem]
        :keyword msg: Message. Required.
        :paramtype msg: str
        :keyword type: Error Type. Required.
        :paramtype type: str
        """
        super().__init__(**kwargs)
        self.loc = loc
        self.msg = msg
        self.type = type


class ValidationErrorLocItem(_serialization.Model):
    """ValidationErrorLocItem."""

    _attribute_map = {}

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
